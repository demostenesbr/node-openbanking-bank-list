// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrganisationStatus {
  ACTIVE
  IN_PROGRESS
  DONE
}

enum OrgDomainRoleClaimStatus {
  ACTIVE
  IN_PROGRESS
  DONE
}

model ApiDiscoveryEndPoints {
  Id            String       @id @default(uuid())
  ApiEndPoint   String
  ApiResourceId ApiResources @relation(fields: [Id], references: [Id])

  @@map("apidiscoveryendpoints")
}

model ApiResources {
  Id                    String                 @id @default(uuid())
  ApiVersion            String
  FamilyComplete        String
  ApiFamilyType         String
  Phase                 String
  AuthorisationServer   AuthorisationServers   @relation(fields: [Id], references: [Id])
  ApiDiscoveryEndPoints ApiDiscoveryEndPoints?

  @@map("apiresources")
}

model AuthorisationServers {
  Id                          String         @id @default(uuid())
  CustomerFriendlyDescription String
  CustomerFriendlyLogoUri     String
  CustomerFridenlyName        String
  DeveloperPortalUri          String
  CustomerFriendly            String
  ApiResources                ApiResources?
  OrganisationId              Organisations? @relation(fields: [Id], references: [Id])

  @@map("authorisationservers")
}

model Organisations {
  Id                          String                @id @default(uuid())
  Status                      OrganisationStatus    @default(ACTIVE)
  OrganisationName            String
  CreatedOn                   DateTime              @default(now())
  LegalEntiryName             String
  CountryOfRegistration       String
  CompanyRegister             String
  Tag                         String?
  Size                        String?
  RegistrationNumber          String
  RegistrationId              String
  AddressLine1                String
  AddressLine2                String
  City                        String
  Postcode                    String
  Country                     String
  Order                       String?
  ParentOrganisationReference String?
  AuthorisationServers        AuthorisationServers?
  OrgDomainRoleClaims         OrgDomainRoleClaims?

  @@map("organisations")
}

model OrgDomainRoleClaims {
  Id                  String                    @id @default(uuid())
  Status              OrgDomainRoleClaimStatus?
  AuthorisationDomain String
  Role                String
  OrganisationId      Organisations             @relation(fields: [Id], references: [Id])

  @@map("orgdomainroleclaims")
}
